apiVersion: v1
data:
  POSTGRES_DB: hello_django_prod
  POSTGRES_PASSWORD: hello_django
  POSTGRES_USER: hello_django
kind: ConfigMap
metadata:
  labels:
    service: db-env-db
  name: env-db
---  
apiVersion: v1
kind: Service
metadata:
  name: db
  labels:
    service: db
spec:
  ports:
    - port: 5432
  selector:
    service: db
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    service: postgres-data
  name: postgres-data
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 200Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    service: db
  name: db
spec:
  replicas: 1
  selector:
    matchLabels:
      service: db
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        service: db
    spec:
      containers:
        - env:
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_DB
                  name: env-db
            - name: POSTGRES_PASSWORD
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_PASSWORD
                  name: env-db
            - name: POSTGRES_USER
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_USER
                  name: env-db
          image: postgres:12.0-alpine
          name: db
          ports:
            - containerPort: 5432
              name: postgres
          resources: {}
          volumeMounts:
            - mountPath: /var/lib/postgresql/data/
              name: postgres-data
      restartPolicy: Always
      volumes:
        - name: postgres-data
          persistentVolumeClaim:
            claimName: postgres-data
